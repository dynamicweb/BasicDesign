@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@inherits ViewModelTemplate<ProductViewModel>

<!-- content -->
<section class="py-5">
    <div class="container">
        <div class="row gx-5">
            <aside class="col-lg-6">
                <!--Default image-->
                <div class="border rounded-4 mb-3 d-flex justify-content-center">
                    <div data-fslightbox="mygalley" class="rounded-4" data-type="image">
                        <img style="max-width: 100%; max-height: 100vh; margin: auto;" class="rounded-4 fit" src="@Model.DefaultImage.Value" />
                    </div>
                </div>
                <!--Assets assigned to 'Images' asset category-->
                <div class="d-flex justify-content-center mb-3">
                    @if (Model.AssetCategories.Count > 0)
                    {
                        foreach (var assetcategory in Model.AssetCategories)
                        {
                            if (assetcategory.Name == "Images")
                            {
                                foreach (var asset in assetcategory.Assets)
                                {
                                    <a data-fslightbox="mygalley" class="border mx-1 rounded-2 item-thumb" target="_blank" data-type="image" href="@asset.Value">
                                        <img width="60" height="60" class="rounded-2" src="@asset.Value" />
                                    </a>
                                }
                            }
                        }
                    }
                </div>
                <!-- thumbs-wrap.// -->
                <!-- gallery-wrap .end// -->
            </aside>
            <main class="col-lg-6">
                <div class="ps-lg-3">
                    <h4 class="title text-dark">
                        @Model.Name
                    </h4>
                    <div class="d-flex flex-row my-3">
                        <!--Ratings-->
                        @if (Model.Rating != 0)
                        {
                            double rating = Model.Rating.Value;
                            <div class="text-warning mb-1 me-2">
                                @while (rating > 1)
                                {
                                    <i class="fa fa-star"></i>
                                    rating = rating - 1;
                                }
                                @if (rating > 0)
                                {
                                    <i class="fas fa-star-half-alt"></i>
                                }
                                <span class="ms-1">
                                    @Model.Rating
                                </span>
                            </div>
                        }
                        <!--Stock states-->
                        @if (Model.StockStatus != null)
                        {
                            if (Model.StockStatus == "In Stock")
                            {
                                <span class="ms-2 text-success">@Model.StockStatus (@Model.StockLevel) </span>
                            }
                            if (Model.StockStatus == "Few in stock")
                            {
                                <span class="ms-2 text-warning">@Model.StockStatus (@Model.StockLevel) </span>
                            }
                            if (Model.StockStatus == "Out of stock")
                            {
                                <span class="ms-2 text-danger">@Model.StockStatus</span>
                            }
                        }

                    </div>
                    <!--Price-->
                    <div class="mb-3">
                        <span class="h5">@Model.Price.PriceWithVatFormatted</span>
                    </div>
                    <!--Description-->
                    <p>
                        @Model.ShortDescription
                    </p>

                    <hr />

                    <!--Highlighted field values-->
                    <div class="row">
                        <!--Standard fields-->
                        <dt class="col-3">EAN</dt>
                        <dd class="col-9">@Model.EAN</dd>

                        <dt class="col-3">Product Number</dt>
                        <dd class="col-9">@Model.Number</dd>
                        <!--Category Brand_information-->
                        @foreach (var category in @Model.ProductCategories)
                        {
                            if (category.Key == "brand_information")
                            {
                                foreach (var field in @category.Value.Fields)
                                {
                                    if (field.Key == "Brand_name")
                                    {
                                        <dt class="col-3">Brand</dt>
                                        <dd class="col-9">@field.Value</dd>
                                    }
                                }
                            }
                        }
                    </div>

                    <hr />

                    <!--Add to cart-->
                    <form method="post">
                        <div class="input-group">
                            <input type="hidden" name="ProductId" value="@Model.Id" />
                            <input type="hidden" name="VariantId" value="@Model.VariantId" />
                            <input type="number" class="form-control" name="quantity" value="1" />
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-primary shadow-0" name="CartCmd" value="add"><i class="me-1 fa fa-shopping-basket"></i> Add to cart </button>
                            </div>
                        </div>
                    </form>

                </div>
            </main>
        </div>
    </div>
</section>
<!-- content -->

<section class="bg-light border-top py-4">
    <div class="container">
        <div class="row gx-4">
            <div class="col-lg mb-4">
                <div class="border rounded-2 px-3 py-2 bg-white">
                    <h4 class="title text-dark">
                        Description
                    </h4>
                    <p>
                        @Model.LongDescription
                    </p>

                </div>
            </div>

            <!--If a Relation Group called "Related Products" exists render the related products-->
            @foreach (var relationgroup in Model.RelatedGroups)
            {
                if (relationgroup.Name == "Related Products")
                {
                    <div class="col-sm-4">
                        <div class="px-0 border rounded-2 shadow-0">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title">@relationgroup.Name</h5>
                                    @foreach (var product in relationgroup.Products)
                                    {
                                        <!--Use extension method to fetch the ProductViewModel for each product-->
                                        var productVM = product.GetProduct();

                                        <div class="d-flex mb-3">
                                            <a href="?ProductID=@product.ProductId" class="me-3">
                                                <img src="@productVM.DefaultImage.Value" style="min-width: 96px; height: 96px;" class="img-md img-thumbnail" />
                                            </a>
                                            <div class="info">
                                                <a href="?ProductID=@product.ProductId" class="nav-link mb-1">
                                                    @productVM.Name
                                                </a>
                                                <strong class="text-dark">@productVM.Price.PriceWithVatFormatted</strong>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

        </div>
        <!--Technical downloads-->
        @if (Model.AssetCategories.Count > 0)
        {
            foreach (var assetcategory in Model.AssetCategories)
            {
                if (assetcategory.SystemName == "technical_downloads")
                {
                    <div class="row gx-4">
                        <div class="col-lg mb-4">
                            <div class="border rounded-2 px-3 py-2 bg-white">
                                <h4 class="title text-dark">
                                    Downloads
                                </h4>
                                @foreach (var asset in assetcategory.Assets)
                                {
                                    string[] assetstring = asset.Value.Split("/");
                                    <p>
                                        <a href="@asset.Value" download>@assetstring.LastOrDefault()</a>
                                    </p>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        }
    </div>

</section>